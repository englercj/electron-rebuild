step-restore-cache: &step-restore-cache
  restore_cache:
    keys:
      - v1-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
      - v1-dependencies-{{ arch }}

steps-test: &steps-test
  steps:
    - checkout
    - *step-restore-cache
    - run:
        name: Install Node
        command: |
          if [[ $(uname -s) = Darwin ]]; then
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install 8
            nvm alias default 8
            echo 'export NVM_DIR=${HOME}/.nvm' >> $BASH_ENV
            echo "[ -s '${NVM_DIR}/nvm.sh' ] && . '${NVM_DIR}/nvm.sh'" >> $BASH_ENV
          fi
          node --version
          npm --version
    - run: npm install
    - save_cache:
        paths:
          - node_modules
        key: v1-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
    - run: npm test


version: 2
jobs:
  test-linux-8:
    docker:
      - image: circleci/node:8
    <<: *steps-test
  test-linux-10:
    docker:
      - image: circleci/node:10
    <<: *steps-test
  test-mac:
    macos:
      xcode: "10.2.0"
    <<: *steps-test

  release:
    docker:
      - image: circleci/node:10.15
    steps:
      - checkout
      - *step-restore-cache
      - run: npm install
      - run: npx semantic-release
workflows:
  version: 2
  test_and_release:
    # Run the test jobs first, then the release only when all the test jobs are successful
    jobs:
      - test-linux-8
      - test-linux-10
      - test-mac
      - release:
          requires:
            - test-linux-8
            - test-linux-10
            - test-mac
          filters:
            branches:
              only:
                - master
